#include <stdio.h>
#include <stdlib.h>

#define MAX_LOJAS 10
#define sucesso 0

int* alocarVetor(int tamanho) {
    int* vetor = (int*)malloc(tamanho * sizeof(int));
    return vetor;
}

float** alocarMatriz(int linhas, int colunas) {
    float** matriz = (float**)malloc(linhas * sizeof(float*));
    for (int i = 0; i < linhas; i++) {
        matriz[i] = (float*)malloc(colunas * sizeof(float));
    }
    return matriz;
}

void questao1() {
    int tamanho;

    printf("Diga o tamanho do vetor: ");
    scanf("%d", &tamanho);

    int* vetor = alocarVetor(tamanho);
    printf("Endereço do vetor: %p", vetor);
    free(vetor);
}

void questao2() {
    int linhas, colunas;

    printf("Digite o número de linhas da matriz: ");
    scanf("%d", &linhas);

    printf("Digite o número de colunas da matriz: ");
    scanf("%d", &colunas);

    float** matriz = alocarMatriz(linhas, colunas);

    printf("Matriz alocada com sucesso!\n");

    for (int i = 0; i < linhas; i++) {
        free(matriz[i]);
    }
    free(matriz);
}

void questao3() {
    int tamanho;
    float media = 0;

    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tamanho);

    int* vetor = alocarVetor(tamanho);

    printf("Digite os elementos do vetor:\n");
    
    for (int i = 0; i < tamanho; i++) {
        scanf("%d", &vetor[i]);
        media += vetor[i];
    }

    media /= tamanho;
    
    printf("Média aritmética: %.2f\n", media);

    free(vetor);
}

int encontrarMaiorElemento(float* vetor, int tamanho, float* maiorValor) {
    int indiceMaior = 0;

    *maiorValor = vetor[0];
    for (int i = 1; i < tamanho; i++) {
        if (vetor[i] > *maiorValor) {
            *maiorValor = vetor[i];
            indiceMaior = i;
        }
    }

    return indiceMaior;
}

void questao4() {
    int tamanho;

    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tamanho);

    float* vetor = (float*)malloc(tamanho * sizeof(float));

    printf("Digite os elementos do vetor:\n");
    for (int i = 0; i < tamanho; i++) {
        scanf("%f", &vetor[i]);
    }

    float maiorValor;
    int indiceMaior = encontrarMaiorElemento(vetor, tamanho, &maiorValor);

    printf("Maior valor: %.2f\n", maiorValor);
    printf("Índice do maior valor: %d\n", indiceMaior);

    free(vetor);
}

float calcularSomaMatriz(float** matriz, int linhas, int colunas) {
    float soma = 0;
    for (int i = 0; i < linhas; i++) {
        for (int j = 0; j < colunas; j++) {
            soma += matriz[i][j];
        }
    }
    return soma;
}

void questao5() {
    int linhas, colunas;

    printf("Digite o número de linhas da matriz: ");
    scanf("%d", &linhas);

    printf("Digite o número de colunas da matriz: ");
    scanf("%d", &colunas);

    float** matriz = alocarMatriz(linhas, colunas);

    printf("Digite os elementos da matriz:\n");
    for (int i = 0; i < linhas; i++) {
        for (int j = 0; j < colunas; j++) {
            scanf("%f", &matriz[i][j]);
        }
    }

    float soma = calcularSomaMatriz(matriz, linhas, colunas);
    printf("Soma dos elementos da matriz: %.2f\n", soma);

    for (int i = 0; i < linhas; i++) {
        free(matriz[i]);
    }
    free(matriz);
}

void questao6() {
    int totalProdutos, totalLojas;

    printf("Digite o número total de produtos: ");
    scanf("%d", &totalProdutos);

    printf("Digite o número total de lojas: ");
    scanf("%d", &totalLojas);

    int tabela[totalProdutos][totalLojas];

    printf("Digite a quantidade de cada produto em cada loja:\n");
    for (int i = 0; i < totalProdutos; i++) {
        for (int j = 0; j < totalLojas; j++) {
            printf("Produto %d - Loja %d: ", i + 1, j + 1);
            scanf("%d", &tabela[i][j]);
        }
    }

    printf("Tabela de produtos nas lojas:\n");
    for (int i = 0; i < totalProdutos; i++) {
        for (int j = 0; j < totalLojas; j++) {
            printf("%d ", tabela[i][j]);
        }
        printf("\n");
    }

    int lojaMenosProdutos = 0;
    int menorQuantidade = tabela[0][0];

    for (int i = 0; i < totalProdutos; i++) {
        for (int j = 0; j < totalLojas; j++) {
            if (tabela[i][j] < menorQuantidade) {
                menorQuantidade = tabela[i][j];
                lojaMenosProdutos = j;
            }
        }
    }

    printf("Loja com menos produtos: %d\n", lojaMenosProdutos + 1);
}

int main(int argc, char ** argv) {
    int opcao;

    do {
        printf("\n\tMENU:\n");
        printf("[1] Questão 01\n");
        printf("[2] Questão 02\n");
        printf("[3] Questão 03\n");
        printf("[4] Questão 04\n");
        printf("[5] Questão 05\n");
        printf("[6] Questão 06\n");
        printf("[0] Sair\n");

        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                questao1();
                break;
            case 2:
                questao2();
                break;
            case 3:
                questao3();
                break;
            case 4:
                questao4();
                break;
            case 5:
                questao5();
                break;
            case 6:
                questao6();
                break;
            case 0:
                printf("Ate mais!!!\n");
                break;
            default:
                printf("Opção inválida! Tente novamente.\n");
                break;
        }
    } while (opcao != 0);

    return sucesso;
}
